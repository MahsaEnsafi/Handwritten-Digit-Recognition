# -*- coding: utf-8 -*-
"""handwritten recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TlVasu5BM3ZKZ0fNJmoKcm4Zylab611l
"""

from google.colab import drive 
drive.mount('/content/drive')

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np

(x_train,y_train),(x_test,y_test)=keras.datasets.mnist.load_data()

plt.matshow(x_test[12]) #showing an example
print(y_test[12])

x_train=x_train/255
x_test=x_test/255

x_train_flatted=x_train.reshape(len(x_train),28*28)
x_test_flatted=x_test.reshape(len(x_test),28*28)
print(x_train_flatted.shape)

model=keras.Sequential([
    keras.layers.Dense(120,input_shape=(784,),activation='relu'),
    keras.layers.Dense(10,activation='sigmoid')
])
tb_callback=tf.keras.callbacks.TensorBoard(log_dir='/logs',histogram_freq=1)
model.compile(
    optimizer='adam',
    loss=keras.losses.sparse_categorical_crossentropy,
    metrics=['accuracy']
)
model.fit(x_train_flatted,y_train,epochs=5,callbacks=tb_callback)



model.evaluate(x_test_flatted,y_test)

y_predict=model.predict(x_test_flatted) #predict
y_predict[12]

np.argmax(y_predict[12])

y_predict_labels=[np.argmax(i) for i in y_predict]
y_predict_labels[:5]

cm=tf.math.confusion_matrix(labels=y_test,predictions=y_predict_labels)
cm

import seaborn as sn
plt.figure(figsize=(10,7))
sn.heatmap(cm,annot=True,fmt='d')
plt.xlabel('predicted')
plt.ylabel('truth')
